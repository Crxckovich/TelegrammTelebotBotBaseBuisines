import sqlite3
import telebot
from telebot import types
from dotenv import dotenv_values
import datetime

config = dotenv_values('.env')
bot = telebot.TeleBot(config.get('TELEGRAM_TOKEN'))


print('RABOTAET')


# –°–¢–ê–†–¢–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï
@bot.message_handler(commands=['start','main','hello'])
def main(message):
    user_id = message.from_user.id
    balance = 160
    connection = sqlite3.connect(config.get('DB_NAME'))
    cursor = connection.cursor()
  
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute('SELECT * FROM users WHERE id=?', (user_id,))
    user_exists = cursor.fetchone()
    
    if not user_exists:
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute('INSERT INTO users (id, balance) VALUES (?, ?)', (user_id, balance))

    connection.commit()
    connection.close()
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton('–ú–µ–Ω—é‚úÖ', callback_data='menu')
    button2 = types.InlineKeyboardButton('–ù–ê–®–ò –û–¢–ó–´–í–´üí¨üìä', url='https://clck.ru/374VdC')
    button3 = types.InlineKeyboardButton('–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤', callback_data='history')
    button4 = types.InlineKeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='addbalance')
    markup.add(button1,button2,button3,button4)
    bot.send_photo(message.chat.id, parse_mode= 'html',  photo=open('photo.png',  'rb'), caption=f'<b>–ü—Ä–∏–≤–µ—Ç</b>, {message.chat.first_name}!\n<b>–Ø –ë–û–¢ –ú–∞–≥–∞–∑–∏–Ω–∞ –†–ï–ô–õ | –î–∏–∑–∞–π–Ω –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ. –Ø —è–≤–ª—è—é—Å—å –∫–∞–∫ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–æ–º –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —Ç–∞–∫ –∏ –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ –≤–∞—à–∏—Ö –ø–æ–∫—É–ø–∫–∞—Ö</b> üòá',reply_markup=markup)

# –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
@bot.callback_query_handler(func=lambda call: call.data == 'addbalance')
def callback_menu(call):
   if call.data == 'addbalance':
        connection = sqlite3.connect(config.get('DB_NAME'))
        cursor = connection.cursor()
        user_id = call.from_user.id
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        cursor.execute(f'SELECT balance FROM users WHERE id = {user_id}')
        result = cursor.fetchone()
        if result:
            balance = result[0]
            bot.send_message(call.message.chat.id, 'üíéüíµ–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {}'.format(balance))
            bot.send_message(call.message.chat.id, 'üíéüíµ–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞üíµüíé:')
            bot.register_next_step_handler(call.message, process_balance_update)
        else:
            bot.send_message(call.message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')

# –§–£–ù–ö–¶–ò–Ø –ü–û–ü–û–õ–ù–ï–ù–ò–Ø
def process_balance_update(message):
    try:
        amount = int(message.text)
        user_id = message.from_user.id
        connection = sqlite3.connect(config.get('DB_NAME'))
        cursor = connection.cursor()
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute(f'SELECT balance FROM users WHERE id = {user_id}')
        result = cursor.fetchone()
        if result:
            balance = result[0]
            if amount <= 5000 and amount > 0:
               new_balance = balance + amount
               # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
               cursor.execute(f'UPDATE users SET balance = {new_balance} WHERE id = {user_id}')
               connection.commit()
               connection.close()
               bot.send_message(message.chat.id, 'üí∏–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω! –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {}üí∏'.format(new_balance))
            else:
                bot.send_message(message.chat.id, '–ù–µ–ª—å–∑—è –º–µ–Ω—å—à–µ 0 –∏ –Ω–µ–ª—å–∑—è –±–æ–ª—å—à–µ 5000')
        else:
            connection.close()
            bot.send_message(message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
    except ValueError:
        bot.send_message(message.chat.id, '–í–≤–æ–¥–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞')


# –ò–°–¢–û–†–ò–Ø –ü–û–ö–£–ü–û–ö
@bot.callback_query_handler(func=lambda call: call.data == 'history')
def callback_menu(call):
    if call.data == 'history':
        user_id = call.from_user.id
        connection = sqlite3.connect(config.get('DB_NAME'))
        cursor = connection.cursor()
        cursor.execute('SELECT * from bills WHERE user_id=?', (user_id,))
        bills = cursor.fetchall()
        info = '–í–æ—Ç —Ç–≤–æ—è –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤:\n'
        for bill in bills:
            info += 'üíéüíµ–ê–π–¥–∏: {user_id}, –ê–π–¥–∏ —Ç–æ–≤–∞—Ä–∞: {item_id}, –î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏: {date}\n'.format(user_id=user_id, item_id=bill[1], date=bill[2])
        cursor.close()
        connection.close()
        markup = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back6')
        markup.add(button1)
        bot.send_message(call.message.chat.id, info, reply_markup=markup)
   
# –í–û–ó–í–†–ê–©–ï–ù–ò–ï –° –ò–°–¢–û–†–ò–ò –í –ì–õ–ê–í –≠–ö–†–ê–ù
@bot.callback_query_handler(func=lambda call: call.data == 'back6')
def callback_menu(call):
   if call.data == 'back6':
     markup = types.InlineKeyboardMarkup()
     button1 = types.InlineKeyboardButton('–ú–µ–Ω—é‚úÖ', callback_data='menu')
     button2 = types.InlineKeyboardButton('–ù–ê–®–ò –û–¢–ó–´–í–´üí¨üìä', url='https://clck.ru/374VdC')
     button3 = types.InlineKeyboardButton('–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤', callback_data='history')
     button4 = types.InlineKeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='addbalance')
     markup.add(button1,button2,button3,button4)
     bot.send_photo(call.message.chat.id, parse_mode= 'html',  photo=open('photo.png',  'rb'), caption=f'<b>–ü—Ä–∏–≤–µ—Ç</b>, {call.message.chat.first_name}!\n<b>–Ø –ë–û–¢ –ú–∞–≥–∞–∑–∏–Ω–∞ –†–ï–ô–õ | –î–∏–∑–∞–π–Ω –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ. –Ø —è–≤–ª—è—é—Å—å –∫–∞–∫ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–æ–º –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —Ç–∞–∫ –∏ –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ –≤–∞—à–∏—Ö –ø–æ–∫—É–ø–∫–∞—Ö</b> üòá',reply_markup=markup)

# –û–°–ù–û–í–ê –ú–ï–ù–Æ
@bot.callback_query_handler(func=lambda call: call.data == 'menu')
def callback_menu(call):
   if call.data == 'menu':
       markup = types.InlineKeyboardMarkup()
       button1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back1')
       button2 = types.InlineKeyboardButton('–¢–æ–≤–∞—Ä—ã', callback_data='tovar')
       button3 = types.InlineKeyboardButton('–†–µ–∫–≤–∏–∑–∏—Ç—ã', callback_data='rekvizit')
       button4 = types.InlineKeyboardButton('–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æüìä', url='https://clck.ru/374VdC')
       markup.add(button1,button2,button3,button4)
       bot.send_photo(call.message.chat.id,parse_mode= 'html',  photo=open('photo2.png',  'rb'), caption=f'–í–æ—Ç –Ω–∞—à–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å. –°–æ–≤–µ—Ç—É–µ–º –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å üìõ<b>–ü–†–ê–í–ò–õ–ê</b>üìõ –∏ –Ω–∞—à–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ. <b>–ü–ï–†–ï–î –ü–û–ö–£–ü–ö–û–ô –ó–ê–ô–î–ò–¢–ï –í –†–ï–ö–í–ò–ó–ò–¢–´!</b>',reply_markup=markup)

# –í–û–ó–í–†–ê–©–ï–ù–ò–ï –ù–ê –ì–õ–ê–í –≠–ö–†–ê–ù –° –ú–ï–ù–Æ
@bot.callback_query_handler(func=lambda call: call.data == 'back1')
def callback_menu(call):
   if call.data == 'back1':
     markup = types.InlineKeyboardMarkup()
     button1 = types.InlineKeyboardButton('–ú–µ–Ω—é‚úÖ', callback_data='menu')
     button2 = types.InlineKeyboardButton('–ù–ê–®–ò –û–¢–ó–´–í–´üí¨üìä', url='https://clck.ru/374VdC')
     button3 = types.InlineKeyboardButton('–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤', callback_data='history')
     button4 = types.InlineKeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='addbalance')
     markup.add(button1,button2,button3,button4)
     bot.send_photo(call.message.chat.id, parse_mode= 'html',  photo=open('photo.png',  'rb'), caption=f'<b>–ü—Ä–∏–≤–µ—Ç</b>, {call.message.chat.first_name}!\n<b>–Ø –ë–û–¢ –ú–∞–≥–∞–∑–∏–Ω–∞ –†–ï–ô–õ | –î–∏–∑–∞–π–Ω –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ. –Ø —è–≤–ª—è—é—Å—å –∫–∞–∫ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–æ–º –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —Ç–∞–∫ –∏ –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ –≤–∞—à–∏—Ö –ø–æ–∫—É–ø–∫–∞—Ö</b> üòá',reply_markup=markup)

# –°–ü–ò–°–û–ö –¢–û–í–ê–†–û–í –ò–î–ï–¢ –ü–û–°–õ–ï –ú–ï–ù–Æ
@bot.callback_query_handler(func=lambda call: call.data == 'tovar')
def callback_menu(call):
       if call.data == 'tovar':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–®–∞–ø–∫–∏üß¢', callback_data='hat')
          button2 = types.InlineKeyboardButton('–ê–≤–∞—Ç–∞—Ä–∫–∏üë§', callback_data='ava')
          button3 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back2')
          markup.add(button1,button2,button3)
          bot.send_photo(call.message.chat.id,  photo=open('photo3.png',  'rb'), caption=f'–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤üìÉüõçÔ∏è',reply_markup=markup)

# –ò–ó –¢–û–í–ê–†–û–í –í –ê–í–ê–¢–ê–†–ö–ò
@bot.callback_query_handler(func=lambda call: call.data == 'ava')
def callback_menu(call):
       if call.data == 'ava':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('üë§ –ê–≤–∞—Ç–∞—Ä –ú–∏–Ω–∏–º–∞–ª–∏–∑–º', callback_data='AvaMIN')
          button2 = types.InlineKeyboardButton('üë§ –ê–≤–∞—Ç–∞—Ä 3D', callback_data='Ava3D')
          button4 = types.InlineKeyboardButton('üë§ –ê–≤–∞—Ç–∞—Ä –í–ö', callback_data='AvaVK')
          button3 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back4')
          markup.add(button1,button2,button3,button4)
          bot.send_photo(call.message.chat.id,  photo=open('photo3.png',  'rb'), caption=f'–í—ã–±–æ—Ä –∞–≤–∞—Ç–∞—Ä–æ–∫üë§',reply_markup=markup)

# –ò–ó –ê–í–ê–¢–ê–†–û–ö –í –ê–í–ê–¢–ê–†–ö–£ –í–ö–û–ù–¢–ê–ö–¢–ï
@bot.callback_query_handler(func=lambda call: call.data == 'AvaVK')
def callback_menu(call):
       if call.data == 'AvaVK':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å‚ùáÔ∏è', callback_data='buyAvaVK')
          button2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back12')
          markup.add(button1,button2)
          bot.send_photo(call.message.chat.id,  photo=open('photo12.png',  'rb'), caption=f'üë§ –ê–≤–∞—Ç–∞—Ä –í–∫–æ–Ω—Ç–∞–∫—Ç–µ ‚Äì 650 —Ä—É–±–ª–µ–π',reply_markup=markup)

# –ö–û–î –ü–û–ö–£–ü–ö–ò –ê–í–ê–¢–ê–†–ö–ò –í–ö–û–ù–¢–ê–ö–¢–ï
@bot.callback_query_handler(func=lambda call: call.data == 'buyAvaVK')
def callback_menu(call):
    connection = sqlite3.connect(config.get('DB_NAME'))
    cursor = connection.cursor()
    user_id = call.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute(f'SELECT balance FROM users WHERE id = {user_id}')
    result = cursor.fetchone()
    if result:
        balance = result[0]
        cursor.execute(f'SELECT price FROM items WHERE id = 3 AND categories_id = 2')
        item_price = cursor.fetchone()
        if item_price:
            item_price = item_price[0]
            if balance >= item_price:
                # –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                new_balance = balance - item_price
                cursor.execute(f'UPDATE users SET balance = {new_balance} WHERE id = {user_id}')

                # –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫
                item_id = 3
                date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                cursor.execute('INSERT INTO bills (user_id, item_id, date) VALUES (?, ?, ?)', (user_id, item_id, date))
                connection.commit()
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                bot.send_message(call.message.chat.id, '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!')
            else:
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ—Ö–≤–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤
                bot.send_message(call.message.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')
        else:
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            bot.send_message(call.message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –ø—Ä–µ–¥–º–µ—Ç–∞')
    else:
        bot.send_message(call.message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')

# –ò–ó –ê–í–ê–¢–ê–†–ö–ò –í–ö–û–ù–¢–ê–ö–¢–ï –í –ê–í–ê–¢–ê–†–ö–ò
@bot.callback_query_handler(func=lambda call: call.data == 'back12')
def callback_menu(call):
       if call.data == 'back12':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('üë§ –ê–≤–∞—Ç–∞—Ä –ú–∏–Ω–∏–º–∞–ª–∏–∑–º', callback_data='AvaMIN')
          button2 = types.InlineKeyboardButton('üë§ –ê–≤–∞—Ç–∞—Ä 3D', callback_data='Ava3D')
          button4 = types.InlineKeyboardButton('üë§ –ê–≤–∞—Ç–∞—Ä –í–ö', callback_data='AvaVK')
          button3 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back4')
          markup.add(button1,button2,button3,button4)
          bot.send_photo(call.message.chat.id,  photo=open('photo3.png',  'rb'), caption=f'–í—ã–±–æ—Ä –∞–≤–∞—Ç–∞—Ä–æ–∫üë§',reply_markup=markup)

# –ò–ó –ê–í–ê–¢–ê–†–û–ö –í –ê–í–ê–¢–ê–†–ö–£ 3D
@bot.callback_query_handler(func=lambda call: call.data == 'Ava3D')
def callback_menu(call):
       if call.data == 'Ava3D':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å‚ùáÔ∏è', callback_data='buyAva3D')
          button2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back11')
          markup.add(button1,button2)
          bot.send_photo(call.message.chat.id,  photo=open('photo11.png',  'rb'), caption=f'üë§ –ê–≤–∞—Ç–∞—Ä 3D ‚Äì 427 —Ä—É–±–ª–µ–π',reply_markup=markup)

# –ö–û–î –ü–û–ö–£–ü–ö–ò –ê–í–ê–¢–ê–†–ö–ò 3D
@bot.callback_query_handler(func=lambda call: call.data == 'buyAva3D')
def callback_menu(call):
    connection = sqlite3.connect(config.get('DB_NAME'))
    cursor = connection.cursor()
    user_id = call.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute(f'SELECT balance FROM users WHERE id = {user_id}')
    result = cursor.fetchone()
    if result:
        balance = result[0]
        cursor.execute(f'SELECT price FROM items WHERE id = 2 AND categories_id = 2')
        item_price = cursor.fetchone()
        if item_price:
            item_price = item_price[0]
            if balance >= item_price:
                # –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                new_balance = balance - item_price
                cursor.execute(f'UPDATE users SET balance = {new_balance} WHERE id = {user_id}')

                # –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫
                item_id = 2
                date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                cursor.execute('INSERT INTO bills (user_id, item_id, date) VALUES (?, ?, ?)', (user_id, item_id, date))
                connection.commit()
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                bot.send_message(call.message.chat.id, '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!')
            else:
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ—Ö–≤–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤
                bot.send_message(call.message.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')
        else:
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            bot.send_message(call.message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –ø—Ä–µ–¥–º–µ—Ç–∞')
    else:
        bot.send_message(call.message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')

# –ò–ó –ê–í–ê–¢–ê–†–ö–ò 3D –í –ê–í–ê–¢–ê–†–ö–ò
@bot.callback_query_handler(func=lambda call: call.data == 'back11')
def callback_menu(call):
       if call.data == 'back11':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('üë§ –ê–≤–∞—Ç–∞—Ä –ú–∏–Ω–∏–º–∞–ª–∏–∑–º', callback_data='AvaMIN')
          button2 = types.InlineKeyboardButton('üë§ –ê–≤–∞—Ç–∞—Ä 3D', callback_data='Ava3D')
          button4 = types.InlineKeyboardButton('üë§ –ê–≤–∞—Ç–∞—Ä –í–ö', callback_data='AvaVK')
          button3 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back4')
          markup.add(button1,button2,button3,button4)
          bot.send_photo(call.message.chat.id,  photo=open('photo3.png',  'rb'), caption=f'–í—ã–±–æ—Ä –∞–≤–∞—Ç–∞—Ä–æ–∫üë§',reply_markup=markup)

# –ò–ó –¢–û–í–ê–†–û–í –í –®–ê–ü–ö–ò
@bot.callback_query_handler(func=lambda call: call.data == 'hat')
def callback_menu(call):
       if call.data == 'hat':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–ú–∏–Ω–∏–º–∞–ª–∏–∑–º –®–∞–ø–∫–∞üé©', callback_data='HatMIN')
          button2 = types.InlineKeyboardButton('–®–∞–ø–∫–∞ 2D‚õëÔ∏è', callback_data='Hat2D')
          button3 = types.InlineKeyboardButton('–®–∞–ø–∫–∞ 3Düß¢', callback_data='Hat3D')
          button4 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back7')
          markup.add(button1,button2,button3,button4)
          bot.send_photo(call.message.chat.id,  photo=open('photo3.png',  'rb'), caption=f'–í—ã–±–æ—Ä –∞–≤–∞—Ç–∞—Ä–æ–∫üë§',reply_markup=markup)

# –ò–ó –®–ê–ü–û–ö –í –®–ê–ü–ö–£ 2D
@bot.callback_query_handler(func=lambda call: call.data == 'Hat2D')
def callback_menu(call):
       if call.data == 'Hat2D':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å‚ùáÔ∏è', callback_data='buyHat2D')
          button2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back10')
          markup.add(button1,button2)
          bot.send_photo(call.message.chat.id,  photo=open('photo10.png',  'rb'), caption=f'üåÖ –®–∞–ø–∫–∞ 2D ‚Äì 780 —Ä—É–±–ª–µ–π üíé–•–ò–¢üíé',reply_markup=markup)

# –ö–û–î –ü–û–ö–£–ü–ö–ò –®–ê–ü–ö–ò 2D
@bot.callback_query_handler(func=lambda call: call.data == 'buyHat2D')
def callback_menu(call):
    connection = sqlite3.connect(config.get('DB_NAME'))
    cursor = connection.cursor()
    user_id = call.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute(f'SELECT balance FROM users WHERE id = {user_id}')
    result = cursor.fetchone()
    if result:
        balance = result[0]
        cursor.execute(f'SELECT price FROM items WHERE id = 6 AND categories_id = 1')
        item_price = cursor.fetchone()
        if item_price:
            item_price = item_price[0]
            if balance >= item_price:
                # –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                new_balance = balance - item_price
                cursor.execute(f'UPDATE users SET balance = {new_balance} WHERE id = {user_id}')

                # –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫
                item_id = 6
                date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                cursor.execute('INSERT INTO bills (user_id, item_id, date) VALUES (?, ?, ?)', (user_id, item_id, date))
                connection.commit()
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                bot.send_message(call.message.chat.id, '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!')
            else:
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ—Ö–≤–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤
                bot.send_message(call.message.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')
        else:
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            bot.send_message(call.message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –ø—Ä–µ–¥–º–µ—Ç–∞')
    else:
        bot.send_message(call.message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
          
# –ò–ó –ú–ò–ù–ò–ú–ê–õ–ò–ó–ú –®–ê–ü–ö–ò –í –®–ê–ü–ö–ò
@bot.callback_query_handler(func=lambda call: call.data == 'back10')
def callback_menu(call):
       if call.data == 'back10':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–ú–∏–Ω–∏–º–∞–ª–∏–∑–º –®–∞–ø–∫–∞üé©', callback_data='HatMIN')
          button2 = types.InlineKeyboardButton('–®–∞–ø–∫–∞ 2D‚õëÔ∏è', callback_data='Hat2D')
          button3 = types.InlineKeyboardButton('–®–∞–ø–∫–∞ 3Düß¢', callback_data='Hat3D')
          button4 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back7')
          markup.add(button1,button2,button3,button4)
          bot.send_photo(call.message.chat.id,  photo=open('photo3.png',  'rb'), caption=f'–í—ã–±–æ—Ä –∞–≤–∞—Ç–∞—Ä–æ–∫üë§',reply_markup=markup)

# –ò–ó –®–ê–ü–û–ö –í –ú–ò–ù–ò–ú–ê–õ–ò–ó–ú –®–ê–ü–ö–£
@bot.callback_query_handler(func=lambda call: call.data == 'HatMIN')
def callback_menu(call):
       if call.data == 'HatMIN':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å‚ùáÔ∏è', callback_data='buyHatMIN')
          button2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back9')
          markup.add(button1,button2)
          bot.send_photo(call.message.chat.id,  photo=open('photo9.png',  'rb'), caption=f'üñºÔ∏è –®–∞–ø–∫–∞ –ú–∏–Ω–∏–º–∞–ª–∏–∑–º ‚Äì 353 —Ä—É–±–ª–µ–π.‚úÖ',reply_markup=markup)

# –ö–û–î –ü–û–ö–£–ü–ö–ò –ú–ò–ù–ò–ú–ê–õ–ò–ó–ú –®–ê–ü–ö–ò
@bot.callback_query_handler(func=lambda call: call.data == 'buyHatMIN')
def callback_menu(call):
    connection = sqlite3.connect(config.get('DB_NAME'))
    cursor = connection.cursor()
    user_id = call.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute(f'SELECT balance FROM users WHERE id = {user_id}')
    result = cursor.fetchone()
    if result:
        balance = result[0]
        cursor.execute(f'SELECT price FROM items WHERE id = 7 AND categories_id = 1')
        item_price = cursor.fetchone()
        if item_price:
            item_price = item_price[0]
            if balance >= item_price:
                # –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                new_balance = balance - item_price
                cursor.execute(f'UPDATE users SET balance = {new_balance} WHERE id = {user_id}')

                # –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫
                item_id = 7
                date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                cursor.execute('INSERT INTO bills (user_id, item_id, date) VALUES (?, ?, ?)', (user_id, item_id, date))
                connection.commit()
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                bot.send_message(call.message.chat.id, '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!')
            else:
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ—Ö–≤–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤
                bot.send_message(call.message.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')
        else:
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            bot.send_message(call.message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –ø—Ä–µ–¥–º–µ—Ç–∞')
    else:
        bot.send_message(call.message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')

# –ò–ó –ú–ò–ù–ò–ú–ê–õ–ò–ó–ú –®–ê–ü–ö–ò –í –®–ê–ü–ö–ò
@bot.callback_query_handler(func=lambda call: call.data == 'back9')
def callback_menu(call):
       if call.data == 'back9':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–ú–∏–Ω–∏–º–∞–ª–∏–∑–º –®–∞–ø–∫–∞üé©', callback_data='HatMIN')
          button2 = types.InlineKeyboardButton('–®–∞–ø–∫–∞ 2D‚õëÔ∏è', callback_data='Hat2D')
          button3 = types.InlineKeyboardButton('–®–∞–ø–∫–∞ 3Düß¢', callback_data='Hat3D')
          button4 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back7')
          markup.add(button1,button2,button3,button4)
          bot.send_photo(call.message.chat.id,  photo=open('photo3.png',  'rb'), caption=f'–í—ã–±–æ—Ä –∞–≤–∞—Ç–∞—Ä–æ–∫üë§',reply_markup=markup)

# –ò–ó –®–ê–ü–û–ö –í –¢–û–í–ê–†–´
@bot.callback_query_handler(func=lambda call: call.data == 'back7')
def callback_menu(call):
       if call.data == 'back7':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–®–∞–ø–∫–∏üß¢', callback_data='hat')
          button2 = types.InlineKeyboardButton('–ê–≤–∞—Ç–∞—Ä–∫–∏üë§', callback_data='ava')
          button3 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back2')
          markup.add(button1,button2,button3)
          bot.send_photo(call.message.chat.id,  photo=open('photo3.png',  'rb'), caption=f'–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤üìÉüõçÔ∏è',reply_markup=markup)

# –ò–ó –®–ê–ü–û–ö –í –®–ê–ü–ö–£ 3D
@bot.callback_query_handler(func=lambda call: call.data == 'Hat3D')
def callback_menu(call):
       if call.data == 'Hat3D':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å‚ùáÔ∏è', callback_data='buyHat3D')
          button2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back8')
          markup.add(button1,button2)
          bot.send_photo(call.message.chat.id,  photo=open('photo8.png',  'rb'), caption=f'üåå –®–∞–ø–∫–∞ 3D ‚Äì 980 —Ä—É–±–ª–µ–π',reply_markup=markup)

# –ò–ó –®–ê–ü–ö–ò 3D –í –®–ê–ü–ö–ò
@bot.callback_query_handler(func=lambda call: call.data == 'back8')
def callback_menu(call):
       if call.data == 'back8':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–ú–∏–Ω–∏–º–∞–ª–∏–∑–º –®–∞–ø–∫–∞üé©', callback_data='HatMIN')
          button2 = types.InlineKeyboardButton('–®–∞–ø–∫–∞ 2D‚õëÔ∏è', callback_data='Hat2D')
          button3 = types.InlineKeyboardButton('–®–∞–ø–∫–∞ 3Düß¢', callback_data='Hat3D')
          button4 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back7')
          markup.add(button1,button2,button3,button4)
          bot.send_photo(call.message.chat.id,  photo=open('photo3.png',  'rb'), caption=f'–í—ã–±–æ—Ä –∞–≤–∞—Ç–∞—Ä–æ–∫üë§',reply_markup=markup)

# –ö–û–î –ü–û–ö–£–ü–ö–ò –®–ê–ü–ö–ò 3D
@bot.callback_query_handler(func=lambda call: call.data == 'buyHat3D')
def callback_menu(call):
    connection = sqlite3.connect(config.get('DB_NAME'))
    cursor = connection.cursor()
    user_id = call.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute(f'SELECT balance FROM users WHERE id = {user_id}')
    result = cursor.fetchone()
    if result:
        balance = result[0]
        cursor.execute(f'SELECT price FROM items WHERE id = 5 AND categories_id = 1')
        item_price = cursor.fetchone()
        if item_price:
            item_price = item_price[0]
            if balance >= item_price:
                # –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                new_balance = balance - item_price
                cursor.execute(f'UPDATE users SET balance = {new_balance} WHERE id = {user_id}')

                # –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫
                item_id = 5
                date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                cursor.execute('INSERT INTO bills (user_id, item_id, date) VALUES (?, ?, ?)', (user_id, item_id, date))
                connection.commit()
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                bot.send_message(call.message.chat.id, '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!')
            else:
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ—Ö–≤–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤
                bot.send_message(call.message.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')
        else:
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            bot.send_message(call.message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –ø—Ä–µ–¥–º–µ—Ç–∞')
    else:
        bot.send_message(call.message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')




# –ò–ó –ê–í–ê–¢–ê–†–û–ö –í –ê–í–ê–¢–ê–†–ö–ê –ú–ò–ù–ò–ú–ê–õ–¨–ù–ê–Ø
@bot.callback_query_handler(func=lambda call: call.data == 'AvaMIN')
def callback_menu(call):
       if call.data == 'AvaMIN':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å‚ùáÔ∏è', callback_data='buyAvaMIN')
          button2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back5')
          markup.add(button1,button2)
          bot.send_photo(call.message.chat.id,  photo=open('photo6.png',  'rb'), caption=f'üë§ –ê–≤–∞—Ç–∞—Ä –ú–∏–Ω–∏–º–∞–ª–∏–∑–º ‚Äì 99 —Ä—É–±–ª–µ–π.',reply_markup=markup)

# –ö–û–î –ü–û–ö–£–ü–ö–ò –ú–ò–ù–ò–ú–ê–õ–¨–ù–û–ô –ê–í–ê–¢–ê–†–ö–ò
@bot.callback_query_handler(func=lambda call: call.data == 'buyAvaMIN')
def callback_menu(call):
    connection = sqlite3.connect(config.get('DB_NAME'))
    cursor = connection.cursor()
    user_id = call.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute(f'SELECT balance FROM users WHERE id = {user_id}')
    result = cursor.fetchone()
    if result:
        balance = result[0]
        # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É –ø—Ä–µ–¥–º–µ—Ç–∞ AvaMIN –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        cursor.execute(f'SELECT price FROM items WHERE id = 1 AND categories_id = 2')
        item_price = cursor.fetchone()
        if item_price:
            item_price = item_price[0]
            if balance >= item_price:
                # –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                new_balance = balance - item_price
                cursor.execute(f'UPDATE users SET balance = {new_balance} WHERE id = {user_id}')

                # –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫
                item_id = 1  # id –ø—Ä–µ–¥–º–µ—Ç–∞ AvaMIN
                date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                cursor.execute('INSERT INTO bills (user_id, item_id, date) VALUES (?, ?, ?)', (user_id, item_id, date))
                connection.commit()
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                bot.send_message(call.message.chat.id, '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!')
            else:
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ—Ö–≤–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤
                bot.send_message(call.message.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')
        else:
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            bot.send_message(call.message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –ø—Ä–µ–¥–º–µ—Ç–∞')
    else:
        bot.send_message(call.message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')

# –ò–ó –ú–ò–ù –ê–í–ê–¢–ê–†–ê –í –í–´–ë–û–† –ê–í–ê–¢–ê–†–û–ö
@bot.callback_query_handler(func=lambda call: call.data == 'back5')
def callback_menu(call):
       if call.data == 'back5':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('üë§ –ê–≤–∞—Ç–∞—Ä –ú–∏–Ω–∏–º–∞–ª–∏–∑–º', callback_data='AvaMIN')
          button2 = types.InlineKeyboardButton('üë§ –ê–≤–∞—Ç–∞—Ä 3D', callback_data='Ava3D')
          button4 = types.InlineKeyboardButton('üë§ –ê–≤–∞—Ç–∞—Ä –í–ö', callback_data='AvaVK')
          button3 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back4')
          markup.add(button1,button2,button3,button4)
          bot.send_photo(call.message.chat.id,  photo=open('photo3.png',  'rb'), caption=f'–í—ã–±–æ—Ä –∞–≤–∞—Ç–∞—Ä–æ–∫üë§',reply_markup=markup)

# –ò–ó –ê–í–ê–¢–ê–†–û–ö –í –¢–û–í–ê–†–´
@bot.callback_query_handler(func=lambda call: call.data == 'back4')
def callback_menu(call):
       if call.data == 'back4':
          markup = types.InlineKeyboardMarkup()
          button1 = types.InlineKeyboardButton('–®–∞–ø–∫–∏üß¢', callback_data='hat')
          button2 = types.InlineKeyboardButton('–ê–≤–∞—Ç–∞—Ä–∫–∏üë§', callback_data='ava')
          button3 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back2')
          markup.add(button1,button2,button3)
          bot.send_photo(call.message.chat.id,  photo=open('photo3.png',  'rb'), caption=f'–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤üìÉüõçÔ∏è',reply_markup=markup)

# –í–û–ó–í–†–ê–©–ï–ù–ò–ï –° –¢–û–í–ê–†–û–í –í –ú–ï–ù–Æ
@bot.callback_query_handler(func=lambda call: call.data == 'back2')
def callback_menu(call):
   if call.data == 'back2':
       markup = types.InlineKeyboardMarkup()
       button1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back1')
       button2 = types.InlineKeyboardButton('–¢–æ–≤–∞—Ä—ã', callback_data='tovar')
       button3 = types.InlineKeyboardButton('–†–µ–∫–≤–∏–∑–∏—Ç—ã', callback_data='rekvizit')
       button4 = types.InlineKeyboardButton('–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æüìä', url='https://clck.ru/374VdC')
       markup.add(button1,button2,button3,button4)
       bot.send_photo(call.message.chat.id,parse_mode= 'html',  photo=open('photo2.png',  'rb'), caption=f'–í–æ—Ç –Ω–∞—à–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å. –°–æ–≤–µ—Ç—É–µ–º –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å üìõ<b>–ü–†–ê–í–ò–õ–ê</b>üìõ –∏ –Ω–∞—à–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ. <b>–ü–ï–†–ï–î –ü–û–ö–£–ü–ö–û–ô –ó–ê–ô–î–ò–¢–ï –í –†–ï–ö–í–ò–ó–ò–¢–´!</b>',reply_markup=markup)

# –†–ï–ö–í–ò–ó–ò–¢–´ –í –ö–û–¢–û–†–´–ï –ó–ê–•–û–î–Ø–¢ –ò–ó –ú–ï–ù–Æ
@bot.callback_query_handler(func=lambda call: call.data == 'rekvizit')
def callback_menu(call):
   if call.data == 'rekvizit':
     markup = types.InlineKeyboardMarkup()
     button1 = types.InlineKeyboardButton('Donationalerts', url='https://clck.ru/374e7g')
     button2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back3')
     markup.add(button1,button2)
     bot.send_photo(call.message.chat.id,parse_mode= 'html',  photo=open('photo4.png',  'rb'), caption=f'‚ö°üí≥üí∏ –û–ø–ª–∞—Ç—É –∑–∞ —É—Å–ª—É–≥–∏ –º–æ–∂–Ω–æ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –Ω–∞ –∫–∞—Ä—Ç—É –±–∞–Ω–∫–∞ <b>–ú–ò–†</b>: 2202700966606930 –∏–ª–∏ —á–µ—Ä–µ–∑ <b>Donationalerts</b>',reply_markup=markup)

# –í–û–ó–í–†–ê–©–ï–ù–ò–ï –° –†–ï–ö–í–ò–ó–ò–¢–û–í –í –ú–ï–ù–Æ
@bot.callback_query_handler(func=lambda call: call.data == 'back3')
def callback_menu(call):
   if call.data == 'back3':
       markup = types.InlineKeyboardMarkup()
       button1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è', callback_data='back1')
       button2 = types.InlineKeyboardButton('–¢–æ–≤–∞—Ä—ã', callback_data='tovar')
       button3 = types.InlineKeyboardButton('–†–µ–∫–≤–∏–∑–∏—Ç—ã', callback_data='rekvizit')
       button4 = types.InlineKeyboardButton('–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æüìä', url='https://clck.ru/374VdC')
       markup.add(button1,button2,button3,button4)
       bot.send_photo(call.message.chat.id,parse_mode= 'html',  photo=open('photo2.png',  'rb'), caption=f'–í–æ—Ç –Ω–∞—à–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å. –°–æ–≤–µ—Ç—É–µ–º –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å üìõ<b>–ü–†–ê–í–ò–õ–ê</b>üìõ –∏ –Ω–∞—à–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ. <b>–ü–ï–†–ï–î –ü–û–ö–£–ü–ö–û–ô –ó–ê–ô–î–ò–¢–ï –í –†–ï–ö–í–ò–ó–ò–¢–´!</b>',reply_markup=markup)

# –û–¢–í–ï–¢–ö–ê –ù–ê –†–ê–ù–î–û–ú–ù–´–ô –¢–ï–ö–°–¢
@bot.message_handler()
def send_text(message):
    bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é...')


bot.polling(none_stop=True, interval=0)







